(ns smeghead\tests\unit\schema\type\string
  (:require phel\test :refer [deftest is])
  (:require smeghead\schema :as z))

(deftest test-string-min-ok
  (let [my-schema (z/string)
        my-schema (z/min my-schema 5)
        result (z/safe-parse my-schema "tuna")]
    (is (= true (result :success)))
    (is (= "tuna" (result :data)))))

(deftest test-string-min-ng
  (let [my-schema (z/string)
        my-schema (z/min my-schema 5)
        result (z/safe-parse my-schema "tunatuna")]
    (is (= false (result :success)))
    (let [error (result :error)]
      (is (= "Smeghead\PhelSchema\ZodError" (php/get_class error)))
      )))
      (let [issues (php/-> error (getIssues))]
        (is (= "Too long" (get-in issues [0 :message])))))))
